name: Release Creation

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
      - "**.yml"
      - "**.png"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - name: Get Version # Run the script that returns the version from `module.json`
        shell: bash
        id: get-version
        run: echo "::set-output name=version::$(node ./.github/workflows/get-version.js)"
      - name: Substitute Manifest and Download Links For Versioned Ones
        uses: microsoft/variable-substitution@v1
        with:
          files: "module.json"
        env:
          download: https://github.com/${{github.repository}}/releases/download/${{steps.get-version.outputs.version}}/module.zip
      - run: zip -r ./module.zip module.json images/ packs/ # Add folders/files here
      - name: Create Release # Create an additional release for this version
        id: create_versioned_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: false # set to false if you do not want to allow updates on existing releases
          name: Release ${{ steps.get-version.outputs.version }} # Use the version in the name
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json,./module.zip" # don't forget to rename module zip thing
          tag: ${{ steps.get-version.outputs.version }} # Use the version as the tag
      - name: Create Release
        id: create_latest_release
        uses: ncipollo/release-action@v1
        if: endsWith(github.ref, 'main') # Only update the latest release when pushing to the main branch
        with:
          allowUpdates: true
          name: Latest
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./module.json,./module.zip" # don't forget to rename module zip thing
          tag: latest